println "============   component_one is APP ==============  "+isPlugin.toBoolean()
if (isPlugin.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isPlugin.toBoolean()) {
                manifest.srcFile "src/main/lib/AndroidManifest.xml"
                java.srcDirs += "src/main/java/";
            } else {
                manifest.srcFile "src/main/app/AndroidManifest.xml"
                java.srcDirs += "src/main/java/";
            }
        }
    }
    resourcePrefix "component_one_"

    compileOptions {
        //必须配置jdk8，lambda必须
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    testCompile "junit:junit:$rootProject.junitVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    compile project(':publiclibrary')

    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouterCompilerVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
}
